/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/

/* check if the DNNTaskManagerDal1_Task table exists, if so, drop it before creating it. */

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}DNNTaskManagerDal1_Task]') AND type in (N'U'))
DROP TABLE {databaseOwner}[{objectQualifier}DNNTaskManagerDal1_Task]
GO

CREATE TABLE {databaseOwner}{objectQualifier}DNNTaskManagerDal1_Task
    (
    TaskId int NOT NULL IDENTITY (1, 1),
    TaskName nvarchar(MAX) NOT NULL,
    TaskDescription nvarchar(MAX) NOT NULL,
    AssignedUserId int NULL,
    ModuleId int NOT NULL,
    TargetCompletionDate datetime NULL,
    CompletedOnDate datetime NULL,
    CreatedOnDate datetime NOT NULL,
    CreatedByUserId int NOT NULL,
    LastModifiedOnDate datetime NOT NULL,
    LastModifiedByUserId int NOT NULL
    )  ON [PRIMARY]
     TEXTIMAGE_ON [PRIMARY]
GO


ALTER TABLE {databaseOwner}{objectQualifier}DNNTaskManagerDal1_Task ADD CONSTRAINT
    PK_{objectQualifier}DNNTaskManagerDal1_Task PRIMARY KEY CLUSTERED 
    (
    TaskId
    ) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

GO




IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}DNNTaskManagerDal1_AddTask') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}DNNTaskManagerDal1_AddTask
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNTaskManagerDal1_AddTask

@TaskName nvarchar(max)
, @TaskDescription nvarchar(max)
, @AssignedUserId int
, @ModuleId int
, @TargetCompletionDate datetime
, @CompletedOnDate datetime
, @CreatedByUserId int

AS
INSERT INTO {databaseOwner}[{objectQualifier}DNNTaskManagerDal1_Task]
          ([TaskName]
          ,[TaskDescription]
          ,[AssignedUserId]
          ,[ModuleId]
          ,[TargetCompletionDate]
          ,[CompletedOnDate]
          ,[CreatedOnDate]
          ,[CreatedByUserId]
          ,[LastModifiedOnDate]
          ,[LastModifiedByUserId])
    VALUES
      (@TaskName
            , @TaskDescription
            , @AssignedUserId
            , @ModuleId
            , @TargetCompletionDate
            , @CompletedOnDate
            , GETDATE()
            , @CreatedByUserId
            , GETDATE()
            , @CreatedByUserId
            )

Select @@Identity
GO


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}DNNTaskManagerDal1_UpdateTask') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    DROP PROCEDURE {objectQualifier}DNNTaskManagerDal1_UpdateTask
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNTaskManagerDal1_UpdateTask
    @TaskId int
    , @TaskName nvarchar(MAX)
    , @TaskDescription nvarchar(MAX)
    , @AssignedUserId int
    , @ModuleId int
    , @TargetCompletionDate datetime
    , @CompletedOnDate datetime
    , @LastModifiedByUserId int

    
AS
UPDATE dbo.[{objectQualifier}DNNTaskManagerDal1_Task]
    Set 
    TaskName = @TaskName
    , TaskDescription = @TaskDescription
    , AssignedUserId = @AssignedUserId
    , ModuleId = @ModuleId
    , TargetCompletionDate = @TargetCompletionDate
    , CompletedOnDate = @CompletedOnDate
    , LastModifiedOnDate = GETDATE()
    , LastModifiedByUserId = @LastModifiedByUserId
WHERE
    TaskId = @TaskId
GO


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}DNNTaskManagerDal1_DeleteTasks') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}DNNTaskManagerDal1_DeleteTasks
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNTaskManagerDal1_DeleteTasks
    @ModuleId int
AS
DELETE FROM
    {databaseOwner}{objectQualifier}DNNTaskManagerDal1_Task
WHERE 
    ModuleId = @ModuleId
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}DNNTaskManagerDal1_DeleteTask') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}DNNTaskManagerDal1_DeleteTask
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNTaskManagerDal1_DeleteTask
    @TaskId int
AS
DELETE FROM
    {databaseOwner}{objectQualifier}DNNTaskManagerDal1_Task
WHERE 
    TaskId = @TaskId
GO







IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}DNNTaskManagerDal1_GetTask') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}DNNTaskManagerDal1_GetTask
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNTaskManagerDal1_GetTask
    @TaskId int
AS
SELECT 
    t.TaskId
    , t.ModuleId
    , t.TaskName
    , t.TaskDescription
    , t.AssignedUserId
    , t.TargetCompletionDate
    , t.CreatedOnDate
    , t.CreatedByUserId
    , t.LastModifiedOnDate
    , t.LastModifiedByUserId

FROM
    {databaseOwner}{objectQualifier}DNNTaskManagerDal1_Task t
WHERE 
    t.TaskId = @TaskId
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}DNNTaskManagerDal1_GetTasks') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}DNNTaskManagerDal1_GetTasks
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNTaskManagerDal1_GetTasks
    @ModuleId int
AS
SELECT 
    t.TaskId
    , t.ModuleId
    , t.TaskName
    , t.TaskDescription
    , t.AssignedUserId
    , t.TargetCompletionDate
    , t.CreatedOnDate
    , t.CreatedByUserId
    , t.LastModifiedOnDate
    , t.LastModifiedByUserId

FROM
    {databaseOwner}{objectQualifier}DNNTaskManagerDal1_Task t

WHERE 
    t.ModuleId = @ModuleId
GO





/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/